{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["idsFromServer","i","uuidv4","Carousel","state","step","frameSize","itemWidth","animationDuration","translateFrame","isDisabledPrev","isDisabledNext","onClickBut","side","setState","prevState","maxScroll","props","images","length","scrollWidth","changeItemWidth","event","target","value","changeFrameSize","changeStep","changeAnimationDuration","disableOnKeyDown","preventDefault","this","className","style","width","type","min","max","onKeyDown","onChange","transform","transition","map","image","src","alt","disabled","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c691dcc9.chunk.js","sourcesContent":["import { Component, ChangeEvent, KeyboardEvent } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport './Carousel.scss';\n\nconst idsFromServer: string[] = [];\n\nfor (let i = 0; i < 10; i += 1) {\n  idsFromServer[i] = (uuidv4());\n}\n\ntype Props = {\n  images: string[];\n};\n\ntype State = {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  translateFrame: number,\n  isDisabledPrev: boolean;\n  isDisabledNext: boolean;\n};\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    translateFrame: 0,\n    isDisabledPrev: true,\n    isDisabledNext: false,\n  };\n\n  onClickBut = (side: number) => {\n    const {\n      step, frameSize, itemWidth,\n    } = this.state;\n\n    this.setState(prevState => {\n      const maxScroll = (this.props.images.length - frameSize) * itemWidth;\n      let scrollWidth = prevState.translateFrame - (step * itemWidth * side);\n\n      if (scrollWidth >= 0) {\n        scrollWidth = 0;\n      }\n\n      if (scrollWidth <= -maxScroll) {\n        scrollWidth = -maxScroll;\n      }\n\n      return {\n        translateFrame: scrollWidth,\n        isDisabledPrev: scrollWidth === 0,\n        isDisabledNext: scrollWidth === -maxScroll,\n      };\n    });\n  };\n\n  changeItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: +event.target.value,\n      translateFrame: 0,\n      isDisabledNext: false,\n      isDisabledPrev: true,\n    });\n  };\n\n  changeFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +event.target.value,\n      translateFrame: 0,\n      isDisabledNext: false,\n      isDisabledPrev: true,\n    });\n  };\n\n  changeStep = (event: ChangeEvent<HTMLInputElement>) => (\n    this.setState({ step: +event.target.value })\n  );\n\n  changeAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => (\n    this.setState({ animationDuration: +event.target.value })\n  );\n\n  disableOnKeyDown = (event: KeyboardEvent<HTMLInputElement>) => (\n    event.preventDefault()\n  );\n\n  render() {\n    const { images } = this.props;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      translateFrame,\n      isDisabledPrev,\n      isDisabledNext,\n    } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <label className=\"Carousel__label label\">\n          Step:\n          <input\n            type=\"number\"\n            min=\"1\"\n            max={frameSize}\n            step=\"1\"\n            value={step}\n            className=\"Carousel__input input\"\n            onKeyDown={this.disableOnKeyDown}\n            onChange={this.changeStep}\n          />\n        </label>\n\n        <label className=\"Carousel__label label\">\n          Frame size:\n          <input\n            type=\"number\"\n            min=\"3\"\n            max={1300 / itemWidth}\n            step=\"1\"\n            value={frameSize}\n            className=\"Carousel__input input\"\n            onKeyDown={this.disableOnKeyDown}\n            onChange={this.changeFrameSize}\n          />\n        </label>\n\n        <label className=\"Carousel__label label\">\n          Item width:\n          <input\n            type=\"number\"\n            min=\"130\"\n            max=\"300\"\n            step=\"10\"\n            value={itemWidth}\n            className=\"Carousel__input input\"\n            onKeyDown={this.disableOnKeyDown}\n            onChange={this.changeItemWidth}\n          />\n        </label>\n\n        <label className=\"Carousel__label label\">\n          Animation duration:\n          <input\n            type=\"number\"\n            min=\"100\"\n            max=\"3000\"\n            step=\"100\"\n            value={animationDuration}\n            className=\"Carousel__input input\"\n            onKeyDown={this.disableOnKeyDown}\n            onChange={this.changeAnimationDuration}\n          />\n        </label>\n\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${translateFrame}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, i) => (\n            <li\n              key={idsFromServer[i]}\n              className=\"Carousel__item\"\n              style={{\n                width: `${itemWidth}px`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`smile â„–${i}`}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-dark\"\n            disabled={isDisabledPrev}\n            onClick={() => this.onClickBut(-1)}\n          >\n            Prev\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"button is-dark\"\n            disabled={isDisabledNext}\n            onClick={() => this.onClickBut(1)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import { Component } from 'react';\nimport Carousel from './components/Carousel';\nimport './App.scss';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}